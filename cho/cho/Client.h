#ifndef _CLIENT_H_ 
#define _CLIENT_H_ 

#include"Client.h"
#include<iostream>
#include<string.h>

using namespace std;


class Client
{
public:
	void run(); //客户端主运行逻辑
	void init();//一个客户端被建立时候立刻调用初始化
	//说明：客户端只需要按照以下功能要求实现每一个功能就行了，不要求接口。对于网络传输的格式要求以下每个服务严格按照给出的做，传输通过调用Network.h中给客户端用的那几个方法。
	//      从网络模块读入和输出数据都是阻塞的，不需要while1，对于任何出现错误的返回信息（network中定义了），都要放弃这次整个服务，并且清空自己的输入buff（调用network的方法）。


	//说明：输入输出中的数据类型意思就是让你调用network中的指定方法传
	//      nchar从下标0开始用
	//      输入输出的描述中一行是一个单位的操作
	//      输入输出从上往下就是先后顺序
	/*服务1：
	    开启客户端时候，要求提供者输入提供者号码（9位数字，我们用长度为9的nchar存），把输入传给服务器，读入反馈，返回1就认可id，允许使用，返回0就错误，让用户重试
		输入：
	    int   //一个标示，代表这个服务，101代表当前服务1
		nchar(9)   //用户输入
		输出：
		int   //这里回来的是1就说明id对了，0就要求重试
	*/

	/*服务2：
	    要求提供者输入被服务者的会员号码（9位数字，我们用长度为9的nchar存），把输入传给服务器，读入反馈，返回1就认可id，允许使用，返回0就错误，让用户重试，返回-1说明则告诉用户欠费被挂起了
		输入：
	    int   //一个标示，代表这个服务，102代表当前服务2
		nchar(9)   //用户输入
		输出：
		int   //这里回来的是1就说明id对了，0就是会员不存在，-1就是会员欠费挂起了
	*/

	/*服务3：
	    一次大保健后记账的服务，还是先核查会员号码，这部分和服务2一模一样；在核查成功后，用户输入日期（MM-DD-YYYY的格式，然后你传给服务器，给服务的要3个int，分别是d,m,y）；
		接着提供者会去翻一个叫“提供者目录”的东西，这个东西存在客户端上，所以你需要把它实现（存在客户端本地），里面就是（服务名，六位编号）的二元组
		然后这里和用户的详细交互过程自己读附录A第3段吧
		然后提供者会把服务对应的那个6位编号输入（nchar(6)）,你把它传给服务器，等待反馈。
		输入：
	    int   //一个标示，代表这个服务，103代表当前服务3
		nchar(9)   //用户输入的会员号码
		输出：
		int   //这里回来的是1就说明id对了，0就是会员不存在，-1就是会员欠费挂起了
		输入：
		int  //年
		int  //月
		int  //日
		nchar(6)  //服务号
		string    //对这次服务的注释，没有的话给‘\0’就行了
		输出
		int   //这里是1就是提交成功了，0说明服务号不合法。
		double //这次服务应该付的钱

		///////////////////
		这之后你要把服务费用显示给用户，或者不合法时候应该要求用户重做操作
		然后在本地存一条表格消息：
		MM-DD-YYYY HH:MM:SS   //当前时间
		MM-DD-YYYY    //提供者输入的那个时间
		nchar(9)     //会员编号
		string       //会员名字（这项之前也得让提供者输入进来，但是存在本地就行，服务器不要）
		nchar(6)    //服务编号
		double      //这次的价钱

		未来任何时候提供者可以调出这个格式的表来看
	*/

	/*服务4：
	    提供者要求要一份“提供者目录”的email
		输入：
		int //一个标示，代表这个服务，104代表当前服务4
		输出：
		int //1就是服务器发email了，0就是出问题了
	*/

};





#endif 